let t=Object.prototype.toString;function e(e){return null!==e&&"[object Object]"===t.call(e)}class o{data;scope;orderedKey;filters;title;footer;keyMap;name;type;onStart;onSuccess;onError;constructor({data:t=[],scope:e={},orderedKey:o=[],filters:s=[],title:r=[],footer:l=[],keyMap:n={},name:i="excel",type:h="xls",onStart:a=()=>{},onSuccess:c=()=>{},onError:f=t=>{console.log(t)}}){this.data=t,this.scope=e,this.filters=s,this.footer=l,this.orderedKey=o,this.keyMap=n,this.name=i,this.title=r,this.type=h,this.onStart=a,this.onSuccess=c,this.onError=f}generate(){if(!this.data||!this.data.length){this.onError&&this.onError();return}this.onStart&&this.onStart();let t=this.getProcessedJson(this.data);return(t=this.toChsKeys(t),"csv"==this.type)?this.export(this.jsonToCSV(t),`${this.name}.${this.type}`,"application/csv"):this.export(this.jsonToXLS(t),`${this.name}.${this.type}`,"application/vnd.ms-excel")}getObjLastValue(t,o){if(e(o)){let e=Object.keys(o)[0],s=Object.values(o)[0];return this.getObjLastValue(t[e],s)}return t[o]}toChsKeys(t){return t.map(t=>{let e={};if(this.orderedKey&&this.orderedKey.length)for(let o of this.orderedKey)e[o]=t[o];if(this.filters&&this.filters.length)for(let t of this.filters)delete e[t];if(this.scope&&Object.keys(this.scope).length){let o=Object.keys(e).length?e:t;for(let t in o)this.scope.hasOwnProperty(t)?e[t]=this.getObjLastValue(o[t],this.scope[t]):e[t]=o[t]}if(this.keyMap&&Object.keys(this.keyMap).length){let o=Object.keys(e).length?e:t;for(let t in o)this.keyMap.hasOwnProperty(t)&&(e[this.keyMap[t]]=o[t],delete o[t])}return Object.keys(e).length?e:t})}download(t,e){if(window.navigator&&window.navigator.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(t,e);else{let o=document.createElement("a"),s=window.URL.createObjectURL(t);o.href=s,o.setAttribute("download",e),o.innerHTML="downloading...",o.style.display="none",document.body.appendChild(o),setTimeout(()=>{o.click(),document.body.removeChild(o),setTimeout(()=>{self.URL.revokeObjectURL(o.href)},250)},66)}}export(t,e,o){new Promise(s=>{let r=this.base64ToBlob(t,o);s(this.download(r,e))}).then(()=>{this.onSuccess&&this.onSuccess()}).catch(t=>{this.onError&&this.onError(t)})}jsonToXLS(t){let e="<thead><tr>";if(this.title&&this.title.length){for(let t of this.title)e+=`<th colspan=${t.colspan}>${t.name}`;e+="<th></tr>"}for(let o in t[0])e+="<th>"+o+"</th>";if(e+="</tr></thead><tbody>",t.map(t=>{for(let o in e+="<tbody><tr>",t)e+=`<td>${t[o]}</td>`;e+="</tr></tbody>"}),this.footer&&this.footer.length){for(let t of(e+="<tfooter><tr>",this.footer))e+=`<th colspan=${t.colspan}>${t.name}`;e+="<th></tr></tr></tfooter>"}return'<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><meta name=ProgId content=Excel.Sheet> <meta name=Generator content="Microsoft Excel 11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e<style type="text/css">td{mso-number-format:@;}</style></head><body><table>${table}</table></body></html>'.replace("${table}",e)}jsonToCSV(t){var e="";if(this.title&&this.title.length){for(let t of this.title)e+=`${t.name}`;e+="\r\n"}for(let o in t[0])e+=o+",";if(e=e.slice(0,e.length-1)+"\r\n",t.map(t=>{for(let o in t){let s=t[o]+"";s.match(/[,"\n]/)&&(s='"'+s.replace(/\"/g,'""')+'"'),e+=s+","}e=e.slice(0,e.length-1)+"\r\n"}),this.footer&&this.footer.length){for(let t of this.footer)e+=`${t.name}`;e+="\r\n"}return e}getProcessedJson(t){let e=this.getKeys(t),o=[];return t.map(t=>{let s={};for(let o in e){let r=e[o];s[o]=this.getNestedData(r,t)}o.push(s)}),o}getKeys(t){let e={};for(let o in t[0])e[o]=o;return e}getNestedData(t,o){var s;let r=e(t)?t.field:t,l=null,n=`${r}`.split(".");l=o[n[0]];for(let t=1;t<n.length;t++)l=l[n[t]];return void 0!==(s=l=this.callItemCallback(t,l))&&null!==s?l:""}callItemCallback(t,o){return e(t)&&"function"==typeof t.callback?t.callback(o):o}base64ToBlob(t,e){let o=window.btoa(window.unescape(encodeURIComponent(t))),s=window.atob(o),r=s.length,l=new Uint8ClampedArray(r);for(;r--;)l[r]=s.charCodeAt(r);return new Blob([l],{type:e})}}export{o as default};